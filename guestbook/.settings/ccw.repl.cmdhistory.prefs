cmdhistory=["(save-message \\"Ana\\" \\"Vozdrica\\")" "(create-guestbook-table)" "(save-message \\"Ana\\" \\"Vozdrica\\")" "(save-message \\"Jelica\\" \\"Hello\\")" "(read-guests)" "(create-user-table)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(print \\"Ana\\")" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(slurp \\"https\://www.youtube.com/\\")" "(println (slurp \\"https\://www.youtube.com/\\"))" "(get (slurp \\"https\://www.youtube.com/\\") \\"yt-lockup-title\\")" "(str \\"aa\\")" "(println \\"A\\n\\")" "(str (slurp \\"https\://www.youtube.com/\\"))" "(println (slurp \\"https\://www.youtube.com/\\"))" "(slurp \\"https\://www.youtube.com/\\")" "(.contains \\"Ana Rankovic\\" \\"Ana\\")" "(re-matches \\"Ana delksdfjl aklsndlksa\\" \\"Ana\\")" "(re-find \#\\"Ana\\" \\"Ana Rankovic\\")" "(re-find \#\\"yt-lockup-title\\" slurp \\"https\://www.youtube.com/\\")" "(re-find \#\\"yt-lockup-title\\" (slurp \\"https\://www.youtube.com/\\"))" "\=> (re-find \#\\"yt-lockup-title\\" (slurp \\"https\://www.youtube.com/\\"))" "(subs \\"Ana\\" \\"Anaa\\")" "(subs \\"Clojure\\" 1 20)" "(subs \\"Clojure\\" 1 2)" "(subs \\"Clojure\\" 1 4)" "(.indexOf 0)" "(split-at \\"A\\" \\"Ana\\")" "(subs \\"Clojure\\" .indexOf)" "(.indexOf v \\"ana\\")" "(def v [\\"one\\" \\"two\\" \\"three\\" \\"two\\"])" "(.indexOf v \\"two\\")" "(def recc [\\"<h3 class\=\\"yt-lockup-title\\"><a href\=\\"])" "(def recc [\\"yt-lockup-title\\"])" "(.indexOf recc (slurp \\"https\://www.youtube.com/\\"))" "(slurp \\"https\://www.youtube.com/\\")" "(.indexOf recc \\"yt-lockup-title\\")" "(.indexOf recc \\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaayt-lockup-titleaaaaaaaaaaaaaaaaa\\")" "(str \\"<h3 class\=\\" \\"\\")" "(str \\"<h3 class\=\\" \\"sdas\\")" "(str \\"<h3 class\=\\" '\\"\\")" "(str \\"<h3 class\=\\" 'cds')" "recc" "str <h3 class\=\\"yt-lockup-title\\"><a href\=" "(str \\"<h3 class\=\\"yt-lockup-title\\"><a href\=\\")" "(println \\"She replied\: \\\\\\"Hello\\\\\\" to my greetings.\\")" "(str \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\")" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(slurp \\"https\://www.youtube.com/\\")" "(.contains \\"Ana Rankovic\\" \\"Ana\\")" "(slurp \\"https\://www.youtube.com/\\")" "(re-find \#\\"yt-lockup-title\\" (slurp \\"https\://www.youtube.com/\\"))" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(find \#\\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\")" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" \\"aaaaaaaaaaa<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\")" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\" \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\")" "(str \\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\")" "(str \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\" (slurp \\"https\://www.youtube.com/\\"))" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(def oioiio (slurp \\"https\://www.youtube.com/\\"))" "(oioiio)" "(def aaa \\"Aaa\\")" "aaa" "(def bbb\\n  print \\"BBB\\")" "(def bbb\\r\\n     (print \\"BBB\\"))" "bbb" "(def oioiio \\n  (slurp \\"https\://www.youtube.com/\\"))" "oioiio" "(def oioiio1 \\r\\n  \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "oioiio1" "(subs oioiio 1 3)" "(subs oioiio 1)" "(subs oioiio1 1)" "oioiio1" "(subs oioiio1 1 3)" "(subs oioiio 1300 1310)" "(.indexOf oioiio1 oioiio)" "(.indexOf \\"Ana\\" oioiio)" "oioiio" "(.indexOf \\"null,\\" oioiio)" "oioiio" "(subs oioiio (.indexOf oioiio1 oioiio))" "oioiio1" "(str q \\"cds\\")" "(def q \\"aaaaaa<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "q" "(q contains? oioiio1)" "(slurp \\"C\:\\\\ana.txt\\")" "(slurp \\"C\:\\\\uuuu.txt\\")" "(slurp \\"C\:\\\\\\\\ana.txt\\")" "(re-find \#\\"na\\" (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\" (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(slurp \\"C\:\\\\\\\\ana.txt\\")" "(re-find \#\\"yt-lockup-title\\" (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(def kljuc\\n  str \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\")" "(def kljuc\\r\\n     (str \\"<h3 class\=\\\\\\"yt-lockup-title\\\\\\"><a href\=\\"))" "kljuc" "(def kljuc\\r\\n     (str \\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\"))" "kljuc" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\" (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\" (slurp \\"www.youtube.com\\"))" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(re-find \#kljuc (slurp \\"https\://www.youtube.com/\\"))" "(re-find kljuc (slurp \\"https\://www.youtube.com/\\"))" "(.indexOf \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\" (slurp \\"https\://www.youtube.com/\\"))" "(.indexOf \\"yt-lockup-title\\" (slurp \\"https\://www.youtube.com/\\"))" "(.indexOf \\"yt-lockup-title\\" (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(re-find \#\\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\" (slurp \\"https\://www.youtube.com/\\"))" "(re-find \#\\"Ana\\" (slurp \\"https\://www.youtube.com/\\"))" "(slurp \\"C\:\\\\\\\\ana.txt\\")" "(start-server)" "(def aaa (str \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"))" "aaa" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(.contains ana aaa)" "(.indexOf aaa ana)" "(.indexOf a ana)" "(count ana)" "(.indexOf ana aaa)" "(subs ana (.indexOf ana aaa) ((.indexOf ana aaa)+20))" "(subs ana 37)" "(subs ana (.indexOf ana aaa))" "(subs ana (+ (.indexOf ana aaa) 20))" "(subs ana (.indexOf ana aaa) (+ (.indexOf ana aaa) 20))" "aaa" "(count aaa)" "(subs ana (+ (.indexOf ana aaa) 58) (+ (.indexOf ana aaa) 78))" "(re-matches aaa ana)" "(def ana (slurp \\"https\://www.youtube.com/\\"))" "ana" "(subs ana (+ (.indexOf ana aaa) 58) (+ (.indexOf ana aaa) 78))" "aaa" "(subs ana (.indexOf ana aaa) (+ (.indexOf ana aaa) 20))" "(.indexOf ana aaa)" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(.indexOf ana aaa)" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(.indexOf ana aaa)" "(subs ana (+ (.indexOf ana aaa) 20))" "(subs ana (+ (.indexOf ana aaa) (count aaa)) (+ (.indexOf ana aaa) (+ (count aaa) 20)))" "(replace \\"The color is red\\" \#\\"red\\" \\"blue\\")" "(clojure.string/replace \\"The color is red\\" \#\\"red\\" \\"blue\\")" "(def red \\n  (str \\"red\\"))" "(clojure.string/replace \\"The color is red\\" \#red \\"blue\\")" "(clojure.string/replace \\"The color is red\\" \#\\"red\\" \\"\\")" "(clojure.string/replace ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\" \\"\\")" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(clojure.string/replace ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\" \\"\\")" "(clojure.string/replace (slurp \\"https\://www.youtube.com/\\") \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\" \\"\\")" "(subs ana (+ (.indexOf ana aaa) (count aaa)) (+ (.indexOf ana aaa) (+ (count aaa) 20)))" "(replace \\"The color is red\\" \#\\"red\\" \\"blue\\")" "(clojure.string/replace \\"The color is red\\" \#\\"red\\" \\"blue\\")" "(def u str \\"The color is red\\")" "(def u (str \\"The color is red\\"))" "(clojure.string/replace u \#\\"red\\" \\"blue\\")" "(clojure.string/replace \\"The color is red and so what\\" u \\"blue\\")" "(count aaa)" "(count ana)" "(re-find \#\\"s+(.*)(s+)\\" \\"success\\")" "(re-find \#\\"s+(.*)\\" \\"success\\")" "(re-find \#\\"yt-lockup-title\\" (slurp \\"https\://www.youtube.com/\\"))" "(re-find \#\\"yt-lockup-title+(.*)\\" (slurp \\"https\://www.youtube.com/\\"))" "(str/split \\"Clojure is awesome\!\\" \#\\" \\")" "(split-at \\"Clojure is awesome\!\\" \#\\" \\")" "(split-with \\"Clojure is awesome\!\\" \#\\" \\")" "(clojure.string/split \\"Clojure is awesome\!\\" \#\\" \\")" "ana" "(clojure.string/split \\"Clojure is awesome\!\\" ana)" "(clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "(clojure.string/split ana \#\\" \\")" "(clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "(clojure.string/split ana \#\\"yt-lockup-title\\")" "(clojure.string/split \\"Clojure is awesome\!\\" \#\\" \\")" "(vec ana [\\"Clojure\\" \\"is\\" \\"awesome\!\\"])" "(def ana [\\"Clojure\\" \\"is\\" \\"awesome\!\\"])" "ana" "(def ana (clojure.string/split ana \#\\"yt-lockup-title\\"))" "(clojure.string/replace \\"The color is red\\" \#\\"red\\" \\"\\")" "ana" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(clojure.string/replace \\"The red color redis red \\" \#\\"red\\" \\"\\")" "(subs ana (+ (.indexOf ana aaa) 58) (+ (.indexOf ana aaa) 78))" "\#\\"red\\"" "(\#\\"red\\")" "\#\\"red\\"" "\#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"" "\\"<h3 class\=\\"yt-lockup-title contains-action-menu\\"><a href\=\\"\\"" "(clojure.string/split \\"Clojure is awesome\!\\" \#\\" \\")" "(clojure.string/split \\"Clojure is awesome\!\\" \#\\"is\\")" "(clojure.string/split \\"Clojure is<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\" awes<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"ome\!\\" \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "\#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(clojure.string/split ana \#\\"yt-lockup-title\\")" "(clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")" "(def vektor (clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"))" "vektor" "(loop vektor\\n  if(.contains vektor \\"\\\\\\">\\")\\n   print \\"Ana\\"\\n   print\\"No no\\"\\n   )" "(some-join [\\"hello\\" \\"world\\" \\"love\\" \\"coding\\"] \\"Words\: \\")" "(some)" "(defn some-join [coll result]\\r\\n          (if (\= 1 (count coll)) (str result (first coll))\\r\\n            (do\\r\\n              (println result)\\r\\n              (recur (rest coll) (str result (first coll) \\", \\")))))" "(some-join [\\"hello\\" \\"world\\" \\"love\\" \\"coding\\"] \\"Words\: \\")" "(def data [\\"Hello\\" \\"World\\" \\"Test\\" \\"This\\"])" "(defn setCell\\r\\n  [row col value]\\r\\n  (some code here))" "(defn setCell\\r\\n  [row col value]\\r\\n  (str \\"Ana\\"))" "(loop [data data, index 0]\\r\\n  (when (seq data)\\r\\n    (setCell 0 index (first data))\\r\\n    (recur (rest data) (inc index))))" "(def vektor (clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"))" "vektor" "(loop vektor)" "(loop (clojure.string/split ana \#\\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"))" "(clojure.string/split \\"Clojure is awesome\!\\" \#\\" \\")" "(start-server)" "(stop-server)" "\\"a\\"" "(subs (slurp \\"https\://www.youtube.com/\\") (+ (.indexOf (slurp \\"https\://www.youtube.com/\\") (str \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")) 20))" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "ana" "(subs ana (.indexOf ana \\"yt-lockup-title\\"))" "(def ana (slurp \\"C\:\\\\\\\\ana.txt\\"))" "(subs ana (.indexOf ana \\"script\\"))" "(subs ana (.indexOf ana \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"))" "(subs ana (+ (.indexOf ana \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") 58))" "(subs (subs ana (+ (.indexOf ana \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") 58)) (subs ana (+ (.indexOf ana \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") 78)))" "(require '[clojure.java.io \:as io])" "(def s (slurp \\"filename.txt\\"))" "s" "(spit \\"newfile.txt\\" s)" "(def s (slurp \\"https\://www.youtube.com/\\"))" "(spit \\"newfile.txt\\" s)" "(use 'clojure.java.io)\\r\\n(with-open [rdr (reader \\"/tmp/test.txt\\")]\\r\\n  (doseq [line (line-seq rdr)]\\r\\n    (println line)))" "(use 'clojure.java.io)\\r\\n(with-open [rdr (reader \\"ana.txt\\")]\\r\\n  (doseq [line (line-seq rdr)]\\r\\n    (println line)))" "(with-open [rdr (reader \\"ana.txt\\")]\\r\\n  (doseq [line (line-seq rdr)]\\r\\n    (println line)))" "\\"C\:\\\\\\\\ana.txt\\"" "(with-open [rdr (reader \\"C\:\\\\\\\\ana.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (println line)))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n  (doseq [line (line-seq rdr)]\\n    (if(.contains line \\"yt-lockup-title \\"))\\r\\n    (println (subs line (+ (.indexOf line \\"yt-lockup-title \\") 58) (+ (.indexOf line \\"yt-lockup-title \\") 78)))))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (if(.contains line \\"yt-lockup-title \\"))\\r\\n       (println (subs line (.indexOf line \\"yt-lockup-title \\")))))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n        (doseq [line (line-seq rdr)]\\r\\n          (if(.contains line \\"yt-lockup-title \\"))\\r\\n          (println line)))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n           (doseq [line (line-seq rdr)]\\r\\n  ;           (if(.contains line \\"yt-lockup-title \\"))\\r\\n             (println line)))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n           (doseq [line (line-seq rdr)]\\r\\n             (.contains line \\"yt-lockup-title \\")\\r\\n             (println line)))" "(if (< 10 100) \\"yes\\" \\"no\\")" "(if ((.contains \\"Ana Rankovic\\" \\"Ana\\")) \\"yes\\" \\"no\\")" "(.contains \\"Ana Rankovic\\" \\"Ana\\")" "(if (.contains \\"Ana Rankovic\\" \\"Ana\\") \\"yes\\" \\"no\\")" "(if (.contains \\"Ana Rankovic\\" \\"Ana\\") \\"Ana\\")" "(if (.contains \\"Ana Rankovic\\" \\"Ansda\\") \\"Ana\\")" "(.contains \\"Ana Rankovic\\" \\"Ana\\")" "(with-open [rdr (reader \\"filename.txt\\")]\\r\\n  (doseq [line (line-seq rdr)]\\r\\n    (if(.contains line \\"fak\\") (println line))))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (if(.contains line \\"yt-lockup-title \\") (println line))))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n              (doseq [line (line-seq rdr)]\\r\\n                (.contains line \\"yt-lockup-title \\")\\r\\n                (println (subs line (+ (.indexOf line \\"yt-lockup-title \\") 58) (+ (.indexOf line \\"yt-lockup-title \\") 78)))))" "(with-open [rdr (reader \\"filename.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (.contains line \\"fak\\") (println line)))" "(with-open [rdr (reader \\"filename.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (if(.contains line \\"fak\\") (println line))))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (if(.contains line \\"yt-lockup-title \\") (println line))))" "(subs \\"Ana Rankovic\\" (+ (.indexOf \\"Ana Rankovic\\" \\"a\\") 2) (+ (.indexOf \\"Ana Rankovic\\" \\"a\\") 5))" "(with-open [rdr (reader \\"newfile.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (if(.contains line \\"yt-lockup-title \\") (subs line (+ (.indexOf line \\"yt-lockup-title \\") 25) (+ (.indexOf \\"Ana Rankovic\\" \\"a\\") 45)))))" "(with-open [rdr (reader (slurp \\"https\://www.youtube.com/\\"))]\\r\\n  (doseq [line (line-seq rdr)]\\r\\n    (println line)))" "(use 'clojure.java.io)\\r\\n(with-open [rdr (reader (slurp \\"https\://www.youtube.com/\\"))]\\r\\n  (doseq [line (line-seq rdr)]\\r\\n    (println line)))" "(slurp \\"https\://www.youtube.com/\\")" "(spit \\"youtube.txt\\" (slurp \\"https\://www.youtube.com/\\"))" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n              (doseq [line (line-seq rdr)]\\r\\n                (.contains line \\"yt-lockup-title \\")\\r\\n                (println line)))" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n              (doseq [line (line-seq rdr)]\\r\\n                (.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")\\r\\n                (println line)))" "(subs \\"Ana Rankovic\\" 3 5)" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n              (doseq [line (line-seq rdr)]\\r\\n                (.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")\\r\\n                (println (subs line 2 4))))" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n                 (doseq [line (line-seq rdr)]\\r\\n                   (.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")\\r\\n                   (println (subs line 2 8))))" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n                 (doseq [line (line-seq rdr)]\\r\\n                   ;(.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")\\r\\n                   (println (subs line (.indexOf line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") (+ (.indexOf line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") 60)))))" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n                 (doseq [line (line-seq rdr)]\\r\\n                   ;(.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")\\r\\n                   (println (subs line (.indexOf line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") (+ (.indexOf line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") 60))\\n                         )))" "(with-open [rdr (reader \\"youtube.txt\\")]\\r\\n                 (doseq [line (line-seq rdr)]\\r\\n                   ;(.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\")\\r\\n                   (println (subs line (.indexOf line \\"yt-lockup-title \\") (+ (.indexOf line \\"yt-lockup-title \\") 60)))))" "(with-open [wrtr (writer \\"write.txt\\")]\\r\\n  (.write wrtr (slurp \\"https\://www.youtube.com/\\")))" "(spit \\"spit.txt\\" \\"https\://www.youtube.com/\\")" "(spit \\"spit.txt\\" (slurp \\"https\://www.youtube.com/\\"))" "(with-open [rdr (reader \\"spit.txt\\")]\\r\\n     (doseq [line (line-seq rdr)]\\r\\n       (if(.contains line \\"yt-lockup-title \\") (println line))))" "(with-open [rdr (reader \\"spit.txt\\")]\\r\\n        (doseq [line (line-seq rdr)]\\r\\n          (if(.contains line \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\") (println line))))" "(def aaa (str \\"<h3 class\=\\\\\\"yt-lockup-title contains-action-menu\\\\\\"><a href\=\\\\\\"\\"))" "(with-open [rdr (reader \\"spit.txt\\")]\\r\\n           (doseq [line (line-seq rdr)]\\r\\n             (if(.contains line aaa) (println line))))" "(def aaa (str \\"<h3 class\=\\\\\\"yt-lockup-title \\\\\\"><a href\=\\\\\\"\\"))" "(with-open [rdr (reader \\"spit.txt\\")]\\r\\n              (doseq [line (line-seq rdr)]\\r\\n                (if(.contains line aaa) (println line))))" "count" "(count aaa)" "(with-open [rdr (reader \\"spit.txt\\")]\\r\\n                 (doseq [line (line-seq rdr)]\\r\\n                   (if(.contains line aaa) (println (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                      (if(.contains line aaa) (println (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                         (if(.contains line aaa) (.write (writer \\"write.txt\\") (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                            (if(.contains line aaa) (.write (writer \\"write.txt\\") (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                      (if(.contains line aaa) (println (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                      (if(.contains line aaa) (.write (writer \\"spit.txt\\") (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                      (if(.contains line aaa) (println (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(spit \\"spit.txt\\" (slurp \\"https\://www.youtube.com/\\"))" "(with-open [](doseq [line (line-seq (reader \\"spit.txt\\"))]\\r\\n                      (if(.contains line aaa) (println (subs line (+ (.indexOf line aaa) 38) (+ (.indexOf line aaa) 58))))))" "(start-server)" "(upisiHtmlUFajl)" "(home)" "(start-server)" "(def string\\r\\n  \\"Ana\\")" "(apply string \\"Rankovic\\")" "(apply str(string \\"Rankovic\\"))" "(apply str ( string  \\"Rankovic\\"))" "(apply str ( \\"Ana\\"  \\"Rankovic\\"))" "(apply str [ string  \\"Rankovic\\"])" "(start-server)" "(+ \\"a\\" \\"aa\\")" "(\\"a\\" \\"a\\")" "(concat \\"abc\\" \\"def\\")" "(with-open [wrtr (writer \\"write.txt\\")]\\r\\n     (.write wrtr (slurp \\"https\://www.youtube.com/\\")))" "(use 'clojure.java.io)\\r\\n(with-open [wrtr (writer \\"/tmp/test.txt\\")]\\r\\n  (.write wrtr \\"Line to be written\\"))" "(use 'clojure.java.io)\\r\\n(with-open [wrtr (writer \\"ana.txt\\")]\\r\\n  (.write wrtr \\"Line to be written\\"))" "(stop-server)" "(start-server)" "ckd;lsk" "\\"dckls;\\"" "(defn upisi []\\n  print \\"Ana\\")" "upisi" "(defn upisi []\\r\\n     (print \\"Ana\\"))" "upisi" "(defn upisi []\\r\\n     println \\"Ana\\")" "upisi" "(upisi)" "(defn upisi [aaaa]\\r\\n        println \\"Ana\\" aaaa)" "(upisi [\\"Ranko\\"])" "(defn upisi [aaa]\\r\\n        println aaa)" "(upisi)" "(upisi \\"Kraso\\")" "(defn ccc [param]\\r\\n  ((with-open [wrtr (writer \\"ana.txt\\")]\\r\\n  (.write wrtr param))))" "(ccc \\"JAjajajs\\")" "ccc" "(ccc)" "(ccc \\"lds;\\")" "(ccc [\\"dad\\"])" "(defn upisi [aaaa]\\r\\n           (spit \\"ana.txt\\" aaaa))" "(upisi \\"dewfewfew\\")" "(start-server)" "\\"aa\\"" "\\"aa\\" \\"cc\\"" "\\"sadas\\" \\"\\\\n\\"" "\\"sadas\\" \\"\\\\n\\" \\"zk\\"" "(spit \\"ana.txt\\" (\\"Ja\\" \\"\\\\n\\") \:append true)" "(spit \\"ana.txt\\" \\"aa\\" \:append true)" "(spit \\"ana.txt\\" \\"BB\\" \\"\\\\n\\" \:append true)" "(spit \\"ana.txt\\" \\"CCC\\\\n\\" \:append true)" "(spit \\"ana.txt\\" \\"CCC\\\\nclds\u00E7lsd;\\" \:append true)" "\\"csac\\" \\"\\\\n\\" \\"ks;a\\"" "(use 'clojure.java.io)\\r\\n(with-open [wrtr (writer \\"ana.txt\\" \:append true)]\\r\\n  (.write wrtr \\"Line to be appended\\"))" "(use 'clojure.java.io)\\r\\n(with-open [wrtr (writer \\"/tmp/test.txt\\" \:append true)]\\r\\n  (.write wrtr \\"Line to be appended\\"))" "(use 'clojure.java.io)\\r\\n(with-open [wrtr (writer \\"ana.txt\\" \:append true)]\\r\\n  (.write wrtr \\"Line to be appended\\"))" "(use 'clojure.java.io)\\r\\n(with-open [wrtr (writer \\"ana.txt\\" \:append true)]\\r\\n  (.write wrtr \\"Line to be appended\\" \\"\\\\n\\"))" "(start-server)" "(defn dodatNoviRed [aa]\\n  (aa \\"\\\\n\\"))" "(dodatNoviRed \\"a\\")" "(dodatNoviRed [\\"csc\\"])" "(start-server)" "(defn upisi [aaaa]\\r\\n              (spit \\"ana.txt\\" aaaa  \:append true))" "(upisi \\"AAAAAAAAAAAAAAAA\\")" "(upisi [\\"ccccccccccccccccccc\\"])" "(start-server)" "(defn upisi [aaaa] (spit \\"ana.txt\\" aaaa  \:append true))" "(subs \\"Ana Rankovic\\" 1 2 )" "((subs \\"Ana Rankovic\\" 1 2 ) \\"\\\\n\\")" "(defn upisi [aaaa a]\\r\\n              (spit \\"ana.txt\\" aaaa a \:append true))" "upisi" "(upisi \\"A\\")" "(upisi \\"A\\" \\"B\\")" "(upisi [\\"A\\" \\"B\\"])" "(defn upisi [aaaa] [a]\\r\\n              (spit \\"ana.txt\\" aaaa a \:append true))" "(\= aaa (+ \\"sa\\" \\"\\\\n\\"))" "(defn upisi [aaaa]\\n  (str aaa (aaaa \\"\\\\n\\")\\r\\n              (spit \\"ana.txt\\" aaa  \:append true)))" "(defn upisi [aaaa]\\r\\n     (str aaa (aaaa \\"\\\\n\\"))\\r\\n                 (spit \\"ana.txt\\" aaa  \:append true))" "(defn upisi [aaaa]\\r\\n        (str aaa (aaaa \\"\\\\n\\"))\\r\\n                    (spit \\"ana.txt\\" (str aaa \\"\\\\n\\")  \:append true))" "(defn upisi [aaaa]\\n  (spit \\"ana.txt\\" (str aaa \\"\\\\n\\")  \:append true))" "(defn upisi [aaaa]\\r\\n     (spit \\"ana.txt\\" (str aaaa \\"\\\\n\\")  \:append true))" "(upisi \\"LOLOOLO\\")" "(upisi \\"Sta Staaaaaaaa\\")" "(start-server)" "(slurp \\"ana.txt\\")" "(defn rand-seq-elem [sequence]\\r\\n  (let [f (fn [[k old] new]\\r\\n            [(inc k) (if (zero? (rand-int k)) new old)])]\\r\\n    (->> sequence (reduce f [1 nil]) second)))" "(require '[clojure.java.io \:as io])\\r\\n(defn rand-line [\\"ana.txt\\"]\\r\\n  (with-open [reader (io/reader \\"ana.txt\\")]\\r\\n    (rand-seq-elem (line-seq reader))))" "   (defn rand-line [\\"ana.txt\\"]\\r\\n     (with-open [reader (io/reader \\"ana.txt\\")]\\r\\n       (rand-seq-elem (line-seq reader))))" "(defn rand-line [\\"C\:\\\\\\\\ana.txt\\"]\\r\\n     (with-open [reader (io/reader \\"C\:\\\\\\\\ana.txt\\")]\\r\\n       (rand-seq-elem (line-seq reader))))" "(defn rand-line [filename]\\r\\n  (with-open [reader (io/reader filename)]\\r\\n    (rand-seq-elem (line-seq reader))))" "(rand-line \\"ana.txt\\")" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(rand-line \\"ana.txt\\")" "/watch?v\=YB6CNF2sPEY" "(rand-line \\"ana.txt\\")" "(use 'clojure.java.browse)" "(browse-url \\"http\://clojuredocs.org\\")" "(browse-url \\"https\://www.youtube.com/watch?v\=KSz4gHd7Rzo\\")" "(browse-url \\"https\://www.youtube.com\\" \\"/watch?v\=KSz4gHd7Rzo\\")" "(browse-url str (\\"https\://www.youtube.com\\" \\"/watch?v\=KSz4gHd7Rzo\\"))" "str (\\"https\://www.youtube.com\\" \\"/watch?v\=KSz4gHd7Rzo\\")" "(str (\\"https\://www.youtube.com\\" \\"/watch?v\=KSz4gHd7Rzo\\"))" "(\\"ana\\" \\"er\\")" "(prikaziRandomOdabraniLink)" "(show-guests)" "(prikaziRandomOdabraniLink)" "http\://clojuredocs.org" "(prikaziRandomOdabraniLink)" "(prikaziRandomOdabraniLink \\"www.google.com\\")" "(concat \\"abc\\" \\"def\\")" "(str \\"A\\" \\" B\\")" "(str \\"https\://www.youtube.com/\\" \\"/watch?v\=QR6sAyFAcFk\\")" "(prikaziRandomOdabraniLink (str \\"https\://www.youtube.com/\\" \\"/watch?v\=QR6sAyFAcFk\\"))" "(prikaziRandomOdabraniLink (rand-line \\"ana.txt\\"))" "(start-server)" "(io/delete-file \\"ana.txt\\")" "(require '[clojure.java.io \:as io])" "(io/delete-file \\"ana.txt\\")" "(start-server)" "(red \\"aaa\\")" "(start-server)" "(stop-server)" "(start-server)" "(defn start-browser []\\r\\n  (set-driver\! {\:browser \:firefox}))" "(ns clj-webdriver-tutorial.features.homepage\\r\\n  (\:require [clojure.test \:refer \:all]\\r\\n            [ring.adapter.jetty \:refer [run-jetty]]\\r\\n            [clj-webdriver.taxi \:refer \:all]\\r\\n            [clj-webdriver-tutorial.features.config \:refer \:all]\\r\\n            [clj-webdriver-tutorial.core.handler \:refer [app-routes]]))" "(defn stop-browser []\\r\\n  (quit))" "(start-server)" "(System/exit 0)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(use 'hiccup.core)" "(use 'hiccup.page)" "(use 'hiccup.form)" "(html\\r\\n  \#_\=> [\:div {\:class \\"url\\"}\\r\\n  \#_\=> [\:a {\:href \\"http\://clojure.org\\"} \\"Clojure - home\\"]])" "(html5\\r\\n  \#_\=> {\:lang \\"en\\"}\\r\\n  \#_\=> [\:head (include-js \\"myscript.js\\") (include-css \\"mystyle.css\\")]\\r\\n  \#_\=> [\:body [\:div [\:h1 {\:class \\"info\\"} \\"Hiccup\\"]]])" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(test-app)" "(fact \\"Fact description\\"\\r\\n\\t[1 2 3 4] \=> (just [odd? even? odd? even?]))" "(deftest addition-tests\\r\\n  (is (\= 5 (+ 3 2)))\\r\\n  (is (\= 10 (+ 5 5))))" "(start-server)" "(test-app)" "(use 'clojure.test)" "(is (\= 5 (+ 4 2)) \\"I never was very good at math...\\")" "(is (re-find \#\\"foo\\" \\"foobar\\"))" "(is (\= 5 (+ 3 2)) \\"I never was very good at math...\\")" "(deftest test-foo\\r\\n(is (\= 1 1)))" "test-foo" "(test-foo)" "(deftest test-foo\\r\\n   (is (\= 2 1)))" "(test-foo)" "(with-test\\r\\n(defn hello [name]\\r\\n(str \\"Hello, \\" name))\\r\\n(is (\= (hello \\"Brian\\") \\"Hello, Brian\\"))\\r\\n(is (\= (hello nil) \\"Hello, nil\\")))" "(hello \\"Judy\\")" "((\:test (meta \#'hello)))" "(run-tests)" "(deftest test-addition\\r\\n(are [x y z] (\= x (+ y z))\\r\\n10 7 3\\r\\n20 10 10\\r\\n100 89 11))" "(test-addition)" "(do\\r\\n(clojure.test/is (\= 10 (+ 7 3)))\\r\\n(clojure.test/is (\= 20 (+ 10 10)))\\r\\n(clojure.test/is (\= 100 (+ 89 11))))" "(do\\r\\n(clojure.test/is (\= 10 (+ 7 3)))\\r\\n(clojure.test/is (\= 20 (+ 10 11)))\\r\\n(clojure.test/is (\= 100 (+ 89 11))))" "(deftest test-tostring\\r\\n(are* str\\r\\n10 \\"10\\"\\r\\n\:foo \\"\:foo\\"\\r\\n\\"identity\\" \\"identity\\"))" "(is (\= 5 (+ 2 2)))" "(is (\= 5 (+ 2 3)))" "(testing \\"Collections\\"\\r\\n(is (coll? {}))\\r\\n(is (coll? \#{}))\\r\\n(is (coll? []))\\r\\n(is (coll? '())))" "(deftest collections-test\\r\\n(testing \\"Collections\\"\\r\\n(is (coll? {}))\\r\\n(is (coll? \#{}))\\r\\n(is (coll? []))\\r\\n(is (coll? '()))))" "(defn mock-get-user [id]\\r\\n(if (\= id \\"foo\\")\\r\\n{\:id \\"foo\\" \:pass (encrypt \\"12345\\")}))" "(run-tests)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(stop-server)" "(start-server)" "(run-tests)" "(start-server)"]
eclipse.preferences.version=1
